{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "enterpriseScaleAnalyticsCompanyPrefix": {
            "type": "string",
            "maxLength": 5,
            "metadata": {
                "description": "Provide the prefix (max 5 characters) for all services that will be created"
            }
        },
        "dataNodeName": {
            "type": "string",
            "defaultValue": "dn001",
            "metadata": {
                "description": "Name of the data node."
            }
        },
        "dataProductName": {
            "type": "string",
            "defaultValue": "dp001",
            "metadata": {
                "description": "Name of the data product."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "privateDnsZoneResourceGroupId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource ID of the resource group of the private dns zones."
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource ID of the subnet for the data domain services."
            }
        },
        "privateLinkSubnetId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource ID of the subnet for the data domain private link services."
            }
        },
        "databaseAdministratorLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the admin password of the database servers."
            }
        },
        "sshKey": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the sshKey which is use for the Machine Learning Compute Instance."
            }
        },
        "userObjectId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the object ID of the user for which the Machine Learning Compute Instance gets created."
            }
        },
        "synapseDefaultStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the storage account that should be used as default for the synapse workspace."
            }
        },
        "synapseDefaultStorageAccountFileSystem": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the file system in the storage account that should be used as default for the synapse workspace."
            }
        }
    },
    "functions": [],
    "variables": {
        "enterpriseScaleAnalyticsCompanyPrefix": "[parameters('enterpriseScaleAnalyticsCompanyPrefix')]",
        "dataNodeName": "[parameters('dataNodeName')]",
        "dataProductName": "[parameters('dataProductName')]",
        "location": "[parameters('location')]",
        "privateDnsZoneResourceGroupId": "[parameters('privateDnsZoneResourceGroupId')]",
        "subnetId": "[parameters('subnetId')]",
        "privateLinkSubnetId": "[parameters('privateLinkSubnetId')]",
        "databaseAdministratorLoginPassword": "[parameters('databaseAdministratorLoginPassword')]",
        "sshKey": "[parameters('sshKey')]",
        "userObjectId": "[parameters('userObjectId')]",
        "synapseDefaultStorageAccountName": "[parameters('synapseDefaultStorageAccountName')]",
        "synapseDefaultStorageAccountFileSystem": "[parameters('synapseDefaultStorageAccountFileSystem')]",
        "keyVaultTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain/main/infra/KeyVault/deploy.keyVault.json?token=AIHRGTR3PX3WDDEU4PKMPLDACQEUA",
        "storageAccountTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain/main/infra/SqlServer/deploy.sqlServer.json?token=AIHRGTS63P2BIAGICUA6MWDACQEVS",
        "applicationInsightsTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain/main/infra/SqlDatabase/deploy.sqlDatabase.json?token=AIHRGTQSLUAHB6JRPS7FWE3ACQEXM",
        "containerRegistryTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain/main/infra/MariaDb/deploy.mariaDb.json?token=AIHRGTVLWQYAF5PTVADQ2I3ACQEZE",
        "machineLearningTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain/main/infra/MySql/deploy.mySql.json?token=AIHRGTXWQ3YDTZT62YDURO3ACQE2U",
        "machineLearningClusterTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain/main/infra/PostgreSql/deploy.postgreSql.json?token=AIHRGTSPDNJLF5IC6S5LCHDACQE4G",
        "machineLearningComputeInstanceTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain/main/infra/PostgreSql/deploy.postgreSql.json?token=AIHRGTSPDNJLF5IC6S5LCHDACQE4G",
        "machineLearningSynapseTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain/main/infra/CosmosDb/deploy.cosmosDb.json?token=AIHRGTSF5ACZZROCL776XMDACQE5S",
        "dataFactoryTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain/main/infra/DataFactory/deploy.dataFactory.json?token=AIHRGTSEPQOIPAN53YQXWO3ACQE7S",
        "synapseTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain/main/infra/Synapse/deploy.synapse.json?token=AIHRGTTIYJCWL2RBIS7LSF3ACQFA6",
        "sqlPoolTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain/main/infra/SqlPool/deploy.sqlPool.json?token=AIHRGTTPNIKPANVF5MG4MYLACQFCM",
        "bigDataPoolTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain/main/infra/BigDataPool/deploy.bigDataPool.json?token=AIHRGTTL5BNRN6TUBQKFPZ3ACQFDK",
        "cognitiveServicesTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain/main/infra/BigDataPool/deploy.bigDataPool.json?token=AIHRGTTL5BNRN6TUBQKFPZ3ACQFDK",
        "searchTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain/main/infra/BigDataPool/deploy.bigDataPool.json?token=AIHRGTTL5BNRN6TUBQKFPZ3ACQFDK"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "keyVault001Deployment",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('keyVaultTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "keyVaultName": {
                        "value": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataProductName'), '-keyvault001')]"
                    },
                    "subnetId": {
                        "value": "[variables('privateLinkSubnetId')]"
                    },
                    "privateDnsZoneId": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "keyVault002Deployment",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('keyVaultTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "keyVaultName": {
                        "value": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataProductName'), '-keyvault002')]"
                    },
                    "subnetId": {
                        "value": "[variables('privateLinkSubnetId')]"
                    },
                    "privateDnsZoneId": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "storageAccount001Deployment",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageAccountTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "storageAccountName": {
                        "value": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), variables('dataNodeName'), variables('dataProductName'), 'storage001')]"
                    },
                    "storageAccountType": {
                        "value": "Standard_ZRS"
                    },
                    "enableHns": {
                        "value": false
                    },
                    "subnetId": {
                        "value": "[variables('privateLinkSubnetId')]"
                    },
                    "privateDnsZoneIdBlob": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net')]"
                    },
                    "privateDnsZoneIdFile": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "applicationInsights001Deployment",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('applicationInsightsTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "applicationInsightsName": {
                        "value": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataProductName'), '-appinsight001')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "containerRegistry001Deployment",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('containerRegistryTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "containerRegistryName": {
                        "value": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataProductName'), '-containerregistry001')]"
                    },
                    "subnetId": {
                        "value": "[variables('privateLinkSubnetId')]"
                    },
                    "privateDnsZoneId": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "machineLearning001Deployment",
            "dependsOn": [
                "keyVault002Deployment",
                "storageAccount001Deployment",
                "applicationInsights001Deployment",
                "containerRegistry001Deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('machineLearningTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "mlWorkspaceName": {
                        "value": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataProductName'), '-machinelearning001')]"
                    },
                    "keyVaultId": {
                        "value": "[reference('keyVault001Deployment').outputs.keyVaultId.value]"
                    },
                    "applicationInsightsId": {
                        "value": "[reference('keyVault001Deployment').outputs.applicationInsightsId.value]"
                    },
                    "storageAccountId": {
                        "value": "[reference('keyVault001Deployment').outputs.storageAccountId.value]"
                    },
                    "containerRegistryId": {
                        "value": "[reference('keyVault001Deployment').outputs.containerRegistryId.value]"
                    },
                    "subnetId": {
                        "value": "[variables('privateLinkSubnetId')]"
                    },
                    "privateDnsZoneId": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "machineLearningCluster001Deployment",
            "dependsOn": [
                "machineLearning001Deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('machineLearningClusterTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "mlClusterName": {
                        "value": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataProductName'), '-machinelearningcluster001')]"
                    },
                    "mlWorkspaceId": {
                        "value": "[reference('machineLearning001Deployment').outputs.mlWorkspaceId.value]"
                    },
                    "mlClusterMaxNodeCount": {
                        "value": 4
                    },
                    "mlClusterVmPriority": {
                        "value": "Dedicated"
                    },
                    "mlClusterVmSize": {
                        "value": "Standard_DS3_v2"
                    },
                    "subnetId": {
                        "value": "[variables('subnetId')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "machineLearningComputeInstance001Deployment",
            "dependsOn": [
                "machineLearning001Deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('machineLearningComputeInstanceTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "mlComputeInstanceName": {
                        "value": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataProductName'), '-computeinstance001')]"
                    },
                    "mlWorkspaceId": {
                        "value": "[reference('machineLearning001Deployment').outputs.mlWorkspaceId.value]"
                    },
                    "mlComputeInstanceUserObjectId": {
                        "value": "[variables('userObjectId')]"
                    },
                    "mlComputeInstanceSshKey": {
                        "value": "[variables('sshKey')]"
                    },
                    "mlComputeInstanceVmSize": {
                        "value": "Standard_DS3_v2"
                    },
                    "subnetId": {
                        "value": "[variables('subnetId')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "dataFactory001Deployment",
            "dependsOn": [
                "keyVault001Deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('dataFactoryTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "dataFactoryName": {
                        "value": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataProductName'), '-datafactory001')]"
                    },
                    "dataFactoryGitAccount": {
                        "value": ""
                    },
                    "dataFactoryGitRepo": {
                        "value": ""
                    },
                    "dataFactoryGitCollaborationBranch": {
                        "value": ""
                    },
                    "dataFactoryGitRootFolder": {
                        "value": ""
                    },
                    "dataFactoryGitType": {
                        "value": "FactoryGitHubConfiguration"
                    },
                    "keyVaultId": {
                        "value": "[reference('keyVault001Deployment').outputs.keyVaultId.value]"
                    },
                    "subnetId": {
                        "value": "[variables('privateLinkSubnetId')]"
                    },
                    "privateDnsZoneIdDataFactory": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net')]"
                    },
                    "privateDnsZoneIdPortal": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.azure.com')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "synapse001Deployment",
            "dependsOn": [
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('synapseTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "synapseWorkspaceName": {
                        "value": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataProductName'), '-synapse001')]"
                    },
                    "synapseDefaultStorageAccountName": {
                        "value": "[variables('synapseDefaultStorageAccountName')]"
                    },
                    "synapseDefaultStorageAccountFileSystem": {
                        "value": "[variables('synapseDefaultStorageAccountFileSystem')]"
                    },
                    "synapseSqlAdministratorLogin": {
                        "value": "ServerMainUser"
                    },
                    "synapseSqlAdministratorPassword": {
                        "value": "[variables('databaseAdministratorLoginPassword')]"
                    },
                    "synapseDatalakeAnalyticsResourceId": {
                        "value": ""
                    },
                    "synapseComputeSubnetResourceId": {
                        "value": ""
                    },
                    "synapseSqlAdminGroupName": {
                        "value": ""
                    },
                    "synapseSqlAdminGroupObjectID": {
                        "value": ""
                    },
                    "subnetId": {
                        "value": "[variables('privateLinkSubnetId')]"
                    },
                    "privateDnsZoneIdSql": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net')]"
                    },
                    "privateDnsZoneIdDev": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "sqlPool001Deployment",
            "dependsOn": [
                "synapse001Deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('sqlPoolTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "sqlPoolName": {
                        "value": "sqlpool001"
                    },
                    "sqlPoolCapacity": {
                        "value": "DW100c"
                    },
                    "synapseWorkspaceId": {
                        "value": "[reference('synapse001Deployment').outputs.synapseWorkspaceId.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "bigDataPool001Deployment",
            "dependsOn": [
                "synapse001Deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('bigDataPoolTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "bigDataPoolName": {
                        "value": "bigdatapool001"
                    },
                    "bigDataPoolNodeSize": {
                        "value": "Medium"
                    },
                    "bigDataPoolMinNodes": {
                        "value": 3
                    },
                    "bigDataPoolMaxNodes": {
                        "value": 10
                    },
                    "bigDataPoolAutopauseDelay": {
                        "value": 15
                    },
                    "synapseWorkspaceId": {
                        "value": "[reference('synapse001Deployment').outputs.synapseWorkspaceId.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "machineLearningSynapse001Deployment",
            "dependsOn": [
                "synapse001Deployment",
                "machineLearning001Deployment",
                "bigDataPool001Deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('machineLearningSynapseTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "mlBigDataPoolName": {
                        "value": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataProductName'), '-bigdatapool001')]"
                    },
                    "mlWorkspaceId": {
                        "value": "[reference('machineLearning001Deployment').outputs.mlWorkspaceId.value]"
                    },
                    "synapseWorkspaceId": {
                        "value": "[reference('synapse001Deployment').outputs.synapseWorkspaceId.value]"
                    },
                    "synapseBigDataPoolId": {
                        "value": "[reference('bigDataPool001Deployment').outputs.bigDataPoolId.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "cognitiveServices001Deployment",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('cognitiveServicesTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "cognitiveServiceName": {
                        "value": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataProductName'), '-cognitiveservice001')]"
                    },
                    "cognitiveServiceKind": {
                        "value": "ComputerVision"
                    },
                    "subnetId": {
                        "value": "[variables('privateLinkSubnetId')]"
                    },
                    "privateDnsZoneId": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "search001Deployment",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('searchTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "searchName": {
                        "value": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataProductName'), '-search001')]"
                    },
                    "searchSku": {
                        "value": "standard"
                    },
                    "searchReplicaCount": {
                        "value": 1
                    },
                    "searchPartitionCount": {
                        "value": 1
                    },
                    "searchHostingMode": {
                        "value": "default"
                    },
                    "subnetId": {
                        "value": "[variables('privateLinkSubnetId')]"
                    },
                    "privateDnsZoneId": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net')]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}